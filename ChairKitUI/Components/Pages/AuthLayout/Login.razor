@page "/"
@layout AuthLayout
@using ChairKitUI.Models.Account.Request
@using System.ComponentModel.DataAnnotations
@inject IJSRuntime JSRuntime

<style>
    html, body {
        margin: 0;
        padding: 0;
        height: 100%;
        width: 100%;
        font-family: 'Poppins', sans-serif;
        background: url('images/sea-beach.jpg') center/cover no-repeat fixed;
        overflow-x: hidden;
    }

    * {
        box-sizing: border-box;
    }

    .login-container {
        backdrop-filter: blur(8px);
        background-color: rgba(255, 255, 255, 0.1);
        max-width: 90vw;
        min-width: 300px;
        width: 100%;
    }

    .header-section {
        background: rgba(255, 255, 255, 0.2);
        backdrop-filter: blur(8px);
    }

    .chair-icon {
        transform: rotate(-15deg);
    }

    .text-blue-100 {
        color: #bfdbfe;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .mud-paper {
        animation: fadeIn 0.7s ease-out;
    }

    .bg-gradient-to-r {
        background: linear-gradient(to right, #10B981, #059669);
    }

    .from-blue-500 {
        background: linear-gradient(to right, #3B82F6, #7C3AED);
    }

    @@media (max-width: 600px) {
        html, body {
            background-position: center 60%;
        }

        .login-container {
            max-width: 95vw;
            padding: 10px;
        }
    }

    @@media (min-width: 601px) and (max-width: 960px) {
        html, body {
            background-position: center 50%;
        }

        .login-container {
            max-width: 70vw;
        }
    }

    @@media (min-width: 961px) {
        html, body {
            background-position: center 50%;
        }

        .login-container {
            max-width: 450px;
        }
    }
</style>

<MudContainer Class="d-flex align-center" Style="min-height: 100vh; padding: 20px; margin: 0; position: absolute; top: 0; left: 0; right: 0;">
    <div style="width: 100%; max-width: 1200px; margin-left: 10vw;">
        <MudPaper Class="login-container rounded-3xl pa-0" Elevation="10" Style="background-color: rgba(255, 255, 255, 0.01); backdrop-filter: blur(8px); border: 1px solid rgba(255, 255, 255, 0.2);">
            <!-- Header Section -->
            <div class="header-section pa-8 text-center" Style="background: rgba(255, 255, 255, 0.01); backdrop-filter: blur(8px);">
                <MudAvatar Class="mb-4" Style="background: rgba(255, 255, 255, 0.2);" Size="Size.Large">
                    <MudImage Src="images/icon.png" Alt="icon chair"></MudImage>
                </MudAvatar>
                <MudText Typo="Typo.h5" Color="Color.Inherit" Class="font-bold text-white" Style="text-shadow: 0 0 4px rgba(0, 0, 0, 0.5);"><b>Seaside Chairs</b></MudText>
                <MudText Typo="Typo.h5" Color="Color.Inherit" Class="mt-2 text-blue-100" Style="text-shadow: 0 0 4px rgba(0, 0, 0, 0.5);"><b>Relax by the ocean with us</b></MudText>
            </div>

            <!-- Form Section -->
            <MudForm Class="pa-8 mud-form" Style="background: rgba(255, 255, 255, 0.01);">
                <MudTextField @bind-Value="login.Email" AutoFocus Label="Email" Variant="Variant.Outlined" Class="mb-6" Style="background: rgba(255, 255, 255, 0.5);" Clearable="true" />

                <MudTextField @bind-Value="login.Password" AutoFocus
                              Variant="Variant.Outlined" Adornment="Adornment.End"
                              AdornmentColor="Color.Dark" Immediate="true"
                              Clearable="true"
                              InputType="@PasswordInput" Class="mb-3"
                              AdornmentIcon="@PasswordInputIcon"
                              OnAdornmentClick="ButtonTestclick" AdornmentAriaLabel="Show Password"
                              Label="Password" Style="background: rgba(255, 255, 255, 0.5);" />

                <div class="d-flex align-center justify-space-between mb-6">
                    <MudCheckBox @bind-Value="login.RememberLogin" Label="Remember me" Color="Color.Primary" />
                    <MudLink Href="/forgot-password" Underline="Underline.Hover" Color="Color.Primary" Typo="Typo.caption"><b>Forgot password?</b></MudLink>
                </div>

                <MudButton Variant="Variant.Filled" Color="Color.Info" Class="w-100 py-3" StartIcon="@Icons.Material.Filled.Login" OnClick="HomePage">Sign In</MudButton>
            </MudForm>
        </MudPaper>
    </div>
</MudContainer>

@code {
    LoginRequest login = new LoginRequest();
    bool isShow;
    private bool PasswordVisibility;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    void ButtonTestclick()
    {
        if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    private async Task HomePage()
    {
        if (string.IsNullOrWhiteSpace(login.Email))
        {
            _snackbar.Add("Please enter email", Severity.Error);
            return;
        }

        if (string.IsNullOrWhiteSpace(login.Password))
        {
            _snackbar.Add("Please enter password", Severity.Error);
            return;
        }

        _snackbar.Add("Login successful", Severity.Success);
        _navigation.NavigateTo("/dashboard");
    }
}